{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "MENG_LINGSHU_3502972\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3I026 - Intelligence artificielle & Data science\n",
    "\n",
    "## TP 2 - k-plus proches voisins (*k-NN*)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Dans ce TP, nous allons principalement mettre en place une \"architecture\" de code nous permettant petit à petit de tester différents modèles d'apprentissage supervisé et programmer les k-NN. Nous allons nous restreindre au cas binaire où les données sont étiquetées $+1$ ou $-1$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Remarque** La concaténation de vecteurs s'obtient à l'aide de la fonction `vstack` de numpy."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Étape 1: dataset\n",
    "\n",
    "La première étape consiste à définir une classe permettant de stocker les données d'apprentissage, de validation et de test. Nous considérerons que les données tiennent en mémoire. Nous allons définir une classe permettant de stocker des couples $\\{(x_1,y_1),...,(x_n,y_n)\\}$. Les $x_i$ et $y_i$ seront des tableaux numpy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "class LabeledSet:  \n",
    "    \n",
    "    def __init__(self, input_dimension):\n",
    "        self.input_dimension = input_dimension\n",
    "        self.nb_examples = 0\n",
    "    \n",
    "    def addExample(self,vector,label):\n",
    "        if (self.nb_examples == 0):\n",
    "            self.x = np.array([vector])\n",
    "            self.y = np.array([label])\n",
    "        else:\n",
    "            self.x = np.vstack((self.x, vector))\n",
    "            self.y = np.vstack((self.y, label))\n",
    "        \n",
    "        self.nb_examples = self.nb_examples + 1\n",
    "    \n",
    "    #Renvoie la dimension de l'espace d'entrée\n",
    "    def getInputDimension(self):\n",
    "        return self.input_dimension\n",
    "    \n",
    "    #Renvoie le nombre d'exemples dans le set\n",
    "    def size(self):\n",
    "        return self.nb_examples\n",
    "    \n",
    "    #Renvoie la valeur de x_i\n",
    "    def getX(self, i):\n",
    "        return self.x[i]\n",
    "        \n",
    "    \n",
    "    #Renvouie la valeur de y_i\n",
    "    def getY(self, i):\n",
    "        return(self.y[i])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Génération de données ''Jouet''\n",
    "\n",
    "Nous allons pour l'instant nous intéresser à des datasets \"jouet\" générés selon des distributions choisies à la main. Commençons par un dataset en 2 dimensions (entrée) et 1 dimension (sortie): $x_i \\in \\mathbb{R}^2$, $y_i \\in \\{-1;+1\\}$ tel que les données sont générées selon deux gaussiennes. Pour cela, nous utiliserons la fonction `numpy.random.multivariate_normal` - http://docs.scipy.org/doc/numpy/reference/generated/numpy.random.multivariate_normal.html\n",
    "\n",
    "- `positive_center` est le centre de la gaussienne des points positifs (vecteur de taille 2)\n",
    "- `positive_sigma` est la variance de la gaussienne (sous forme de matrice 2*2)\n",
    "- Idem pour `negative`\n",
    "\n",
    "Générer une premiere gaussienne associée au label $+1$.\n",
    "\n",
    "Y ajouter une seconde gaussienne associée au label $-1$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def generer_exemple(mean=0):\n",
    "    \"\"\"Genere un exemple\"\"\"\n",
    "    mean = [mean, mean]\n",
    "    cov = [[1, 0], [0, 6]]\n",
    "    return np.random.multivariate_normal(mean, cov)\n",
    "\n",
    "def generer_exemples(nombre_exemples, mean=0):\n",
    "    \"\"\" Genere une liste de taille 'nombre_exemple' d'exemples \"\"\"\n",
    "    exemples = list()\n",
    "    for _ in range(nombre_exemples):\n",
    "        exemples.append(generer_exemple(mean))   \n",
    "    return exemples\n",
    "\n",
    "def ajouter_exemples_aleatoires(the_set, nombre_exemples, mean, labels):\n",
    "    \"\"\" Ajoute dans 'the_set' un total de 'nombre_exemples' exemples\n",
    "    associés aleatoirement à un label contenu dans 'labels'. \"\"\"\n",
    "    from random import choice\n",
    "    exemples = generer_exemples(nombre_exemples, mean)\n",
    "    for exemple in exemples:\n",
    "        the_set.addExample(exemple, choice(labels))\n",
    "        \n",
    "the_set = LabeledSet(2)\n",
    "ajouter_exemples_aleatoires(the_set, 50, -2, [-1])\n",
    "ajouter_exemples_aleatoires(the_set, 50, 2, [1])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Le data set peut être affiché en utilisant matplotlib (pour vérifier) et plus précisément la fonction `matplotlib.pyplot.scatter` permettant de dessiner un nuage de points - http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.scatter -"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "# Permet d'afficher les figures directement dans le notebook:\n",
    "%matplotlib inline\n",
    "\n",
    "def plot2DSet(dataset):\n",
    "    plt.scatter(dataset.x[0:int(dataset.size()/2),0],dataset.x[0:int(dataset.size()/2),1],marker='o')\n",
    "    plt.scatter(dataset.x[int(dataset.size()/2):dataset.size(),0],dataset.x[int(dataset.size()/2):dataset.size(),1],marker='x')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXYAAAD8CAYAAABjAo9vAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAHE1JREFUeJzt3X+MXNV1B/Dv8XqNlxCyqXBkec3GoBYTCrROpphq1SQG\nUpsfAoukVdomShVFFlYSBYk42RVVKJUab2spTSQikEVTtQlKSoFsUiB2QGtUNRIO6yzEIeCIpk3w\nOD82CgtRWPCv0z/ePu/M7JuZ9+O+d3+870dCeHZn39wZr8/cOffcc0VVQURE4VhhewBERGQWAzsR\nUWAY2ImIAsPATkQUGAZ2IqLAMLATEQWGgZ2IKDAM7EREgWFgJyIKzEobD3reeefphg0bbDw0EZG3\nDh069CtVXdPvflYC+4YNGzAzM2PjoYmIvCUiP0lzP6ZiiIgCw8BORBQYBnYiosAwsBMRBYaBnYgo\nMEYCu4gMi8gDIvK8iDwnIn9s4rpERJSdqXLHLwDYp6rvE5FVAM42dF0iIsqocGAXkXMBvBPAXwOA\nqh4HcLzodYlqRRUQ6X67bvh6FGIiFXMhgDkA/yIisyJyr4i8ofNOIrJDRGZEZGZubs7AwxIF4sBu\nYN9EFLyA6P/7JqKv1xFfj8JMBPaVAN4O4G5V3QTgtwDGO++kqntVtaGqjTVr+u6IJeqv8yB2Hw9m\nVwVeexk4ePdSMNs3Ed1+7WU/n1MRfD2MMJFjPwrgqKoeXLz9ABICO5FRB3ZH/9C37Y4+oscBYPWb\ngC0TtkeXnkj0HIAoeB28O/rz5p1Lz61O+HoYUXjGrqo/B/CiiGxc/NLVAH5Y9LpEXZma1bky428N\nZrE6BzG+HoWZqmP/OID7ROT7AP4QwGcNXZdoufgf/uadUTC/czj6f5ZZnUt53PixW7WOrW74ehRm\nJLCr6tOL+fPLVXW7qr5k4rpEXRWZ1bmUx2197M07gTvml96w6hjM+HoYYaVtL1Fh3WZ1aYK7S3lc\nkWhdoPWx47GtflP90g98PYwQtfAO2Gg0lP3YKbfOWd223ctvp5253zm8dPuOeXuBg3Xb7fh6JBKR\nQ6ra6Hc/9ooh/3Sb1W3emX5W51oet3PMdQ9ifD0KYSqG/LRlon0WFwf3LEE9acYPsAKDvMfATv7K\nO6tjHpcCx8BO/jGRfy0y4ydyHHPs5BeT9ec+5nFd2VSVhY9j9hwDO/nDpfpzG0y+qVUVbF3aCFYj\nDOxkRhWBwsSOU1+ZfFOrKtjW/Y3YIubYqbgqG3LFwT2uYAHCD+qAuU1VrcEWWL4HwGS9uEsbwWqG\nM3YqpupZmWv151Uy0Ryr6k89bOhlBQM7FVNloKh7HxFTb2pVBts6vxFbxMBOmUzNNjE2OY0Lxh/B\n2OQ0pmab1QUKEztOfWXyTa2qYFv3N2KLmGOn1KZmm5h46DAWTpwCADTnFzDx0GFAFdt/cVf7ndM2\n5MqqrvXnpjZVVbnrlhvBrGFgp9T27D9yJqjHFk6cxPFHPg2ceri67fk+1p+bYOJNrepgW9c3YssY\n2Cm1Y/MLCV8VHHt9FTDGWVklTLypVR1s6/pGbBEDO6W2bngIzYTg/h/nfBC3btvCWZlPGGyDxsVT\nSm3X1o0YGhxo+9rQ4AB2bd3IQEHkEM7YKbXtm0YARLn2Y/MLWDc8hF1bN575OhG5gYGdMtm+aYSB\nnMhxTMUQEQWGgZ2IKDDGAruIDIjIrIg8bOqaRESUnckZ+ycAPGfwekRElIORwC4i6wFcD+BeE9cj\nKoQn9lDNmZqxfx7ApwCc7nYHEdkhIjMiMjM3N2foYYk68MQeouKBXURuAPBLVT3U636quldVG6ra\nWLNmTdGHJVquzif2mP6Uwk89XjNRxz4G4EYRuQ7AagDnishXVPUDBq5NlF5dT+wxfYJVlSdiUSkK\nz9hVdUJV16vqBgDvBzDNoE7W1O3EHtOfUur8qScg3HlKYel2iESowd30p5S6fuoJjNENSqr6hKre\nYPKaRKnV9cSeLJ9S0uTO6/apJ0DceUrhSHN0nolFQdcWFtMedZe2YojnlHqPgZ3CsqUj7RIH9y0T\nZkohXSunTPspJW3uvK6fegLDHDuFJ6k3fGtgA9qP8Nu8s/1EoW5MXMO0tEfdpc2dp71e53O18dyp\nK1EL78CNRkNnZmYqf1yqudbZaCzroqCJa5QhbaBVBe4cXrp9x3z3+3W7HsshrRGRQ6ra6Hc/pmKo\nPkwsCrq6sJjmBKssufNu12M5pBcY2Kk+TCwK+rqwaCp33rogffDuaPYfX9OFNzgCwMBOdWEisPm4\nsBiP6Uzu/JbuFUNp2fjU4lolkuMY2Kke0pRCVnGNKnVW8Lx7HFAAT0xGt1srhrKo+lOLa5VIHmBV\nDNXHlon2RcA4sGUJyCauUYVuFTzfvae9gifruDs/tbRWBsWPY/K1cLESyQMM7JRoaraJPfuP4Nj8\nAtYND2HX1o1hHGKdZpGximuUrazWAGnLIU1hi4NcWO5Iy0zNNjHx0GEsnDh15mtDgwPYffNlYQT3\nOklb3pjnulXWsWd9HoHW2bPckXLbs/9IW1AHgIUTp7Bn/xFLI6JcysyFV/mpJevzYE6egZ2WOza/\nkOnrlFOZlR5VV/CU9VyyPg/W2QNgjp0SrBseQjMhiK8bHrIwmkDl3b2ZNsWQJhduKl1R5k7UrDl9\n5uQBcMZOCXZt3YihwYG2rw0NDmDX1o2WRhSYvLPKrCmGshuiFXkuWfR6Hklc3R1cIc7YaZl4gTTI\nqhgX5JlV5i37K6shWpHnkkeWnH7dDltJwKoYIlvyVHqYakBmuplZWdU3ecbRrc4+gHQMq2KIsqh6\ny3qeihWTKQaT13Kpf45vu4NLwsBOVHV5XN6KFZMB1NS1XOyfkzUnHyDm2KnebGxZz7N7M8tW/n7V\nLibbAlS9EzUtH3YHl4g5diJbh2dkLTdMU1aYtvTQdIlioDs9XZM2x87ATgS4s/jXT68AmnXhkMHY\nO2kDe+FUjIicD+DfAKwFcBrAXlX9QtHrElXGp/K4XimGrKWHNU9XhMzE4ulJALep6tsAXAngoyJy\niYHrEpXPxcW/ImxvzuGBGE4oHNhV9Weq+r3FP/8GwHMAuJOF/OBreVy3AGqz9JDNt5xhtCpGRDYA\n2ATgYML3dgDYAQCjo6MmH5aoGF8Oz4h1W/g861zg9VeqOwSjFQ/EcIqxwC4i5wB4EMCtqvpK5/dV\ndS+AvUC0eGrqcYmM8CXf3C+Arj7XTukhm285xUhVjIgMAngYwH5V/Vy/+7MqhqiAfuWZNqtdfKku\n8lRlLQVERAD8M4Dn0gR1Iiqo3wKprU8fLrUWqDkTVTFjAD4I4CoReXrxv+sMXJeIklQZQNNWuYRW\nXeS5wjl2Vf1vAPysZVCwB0lTcSbbAfSTZXeqq60Faoq9YhzTeZB0c34BEw8dBgAGd6ougOapcvGt\nuihgbCngmLHJ6cRj6UaGh/Cd8assjIiclLRACphdNLXVQ4e6Yj92T/EgaUqlM7A+MWl+c5DtXayU\nGwO7Y7odGM2DpKmrss4dZZWLt5hjT6mqBc1dWze25dgBHiRNfZSxOajKRVoyjoE9hSoXNHmQNOUS\nB/fWfHhnGiXr9VjlYoaFDWNcPE2BC5rkPFXg3muAZsu/qytuiQqRVw/nPxaOPduLMXygSWX92OuA\nC5rkNFXgW+NLQX3zLYAC+O49LbdzBmRfeui4yGJjNAb2FNYNDyXO2LmgWaHOfwSnTwMrVnT/fp2I\nAEPDSzP0g/csfW+kAWybrO9rY5PFxmisiklh19aNGBocaPtaqAuaU7NNjE1O44LxRzA2OY2p2abt\nIS3v8z39WWDvO4EDn41us+939LH+2skoiLf6yOMM6jZZKhkNNrCbDFDbN41g982XYWR4CIIot777\n5suCW9CMF4mb8wtQLC0SWw3unaV8p08DP3oU+Plh4Mij0W0TpX2hYHmiWyyVjAaZiimjimX7ppG2\nn43fOEKqXNmz/0hbmSUALJw4hT37j9h7bt0+zq69LAruf/fm6Hbdd0SyPNE9Fv9Ogpyx9wpQJjg5\nszXA2UXipI+zO/6r/bbtwGX7rE9fj/gLmcW/kyBn7GUHqLQzW9+6NLYvEivipp3rhofsLk4mfZzd\n+8722/sm7AV3wyVtuYXUhCuUMktLfydBztjL3paf5o3Dx1l9vEh868oH8JmVXwag0SLxn15kb3Gy\n8+PsZ15aSsOsvSy6bbPvd1nb+fMKoTwxtEOxLfydBDljL3tbfpryRyfz1X1s3zQCqOL4I1/Gn5/a\nh3POWolV1/8Dtv/iLnuHEid9nL1o8RyXjddFJY82d0TyrE+zeCi2EcHuPC0zDdK5OAtEbxytlTIb\nxh9J/FkB8L+T15c+xkJcbNfqeh07z/o0x8XfP0fUfudpZxWL6WsD3fu5TM02IYiy1J3iWb3TB2p0\n6zti8x9V52OvWNH7+1XqVtLmwuHSPnLx988zwQb2svV649iz/0hiUBfgTDrI6VRNv0BFS/qVtJ11\nLvD6K/YXVm3J86bG37/Cglw8ta3b4qpiaTbubGkhDyXOpmdJ22JQd2VhtWp5FkH5+2cEZ+wl6La4\nOtKyuNrtPsNnD5Y6tr7YrjW7XiVtcSCq28Jq2kXQpBk8f/8KC3bx1KY0i6tTs03seuAZnDjV/voP\nrhDs+bM/cCMdw7ywGXVdWO23CNpa/x+L01Tv+rRbi+OOqPTMUxHZJiJHROQFERk3cU2fpekts33T\nCN6wavkHphOn1dgO2UJCqIeuWtLu0zofL9erAVbrjP7ea6K2w/vGF9NU88tTNvz9y6RwKkZEBgB8\nEcB7ABwF8JSIfFNVf1j02j5LU5Uzv3Ai8evW8+yUXdLu07hHenOmnv1b+i2CbtsNQKM2w0m95Fm3\nnpuJGfsVAF5Q1R+r6nEAXwNwk4HrBi0uiUzCPu+e6bb7tPWgi7r1b0mzCCqyvM3wwXuWgnrob3wl\nMrF4OgLgxZbbRwFs7ryTiOwAsAMARkdHDTys37qVRALAlovXVDqWXpzdROWSfrtP4/u03jf0gJVm\nET5pRh+rw2tUIhOBPenVXxazVHUvgL1AtHhq4HG91ivd8uChJhpv/Z1MAbSMAOz0JirXZNlUkyVg\n+byI3a9a6MyMvuMoPyBKY13Lk5/yMpGKOQrg/Jbb6wEcM3Bda6o4RahXuiVri+GyGo6V3f44KGUs\nklbRDKvsdsPdFuHPzOhbgvoVt0S3RxrR7bosMpfARGB/CsDvicgFIrIKwPsBfNPAda3oFyRNBf2k\n4/ZaZVlALSsAO7uJyjVlbKqpomuk7S6KWyaiHPvQcPR6xUf7feTxeqxDlKhwKkZVT4rIxwDsBzAA\n4Euq+mzhkVnSL0iaSk3E97/t/mdwKuEfaZYF1LICMA/xTsnEpq6kFEuZXSNd6aIosjxlE4+HQT03\nIztPVfVRAI+auJZtvYKk6f4u8c8UbTFcVgAuu/1xUIocqNDroI6ymmG51m6Y+yaMYq+YDr0O6Shj\nZmzioOyktI6JAFyXQ7yNyROceqVcFuajTTutTOade20gIq+xV0yHXrPUPfuPlDIzLtpiuF8bYZtj\noz66zZyvuCWqNzt4T3mbm/J0UfS5SqdGGNg79AuSrqYmGIA9llQqee0k8MRkec2w+rUbTgrurpzt\nSn0xsCfoFiTLnBlTjfWaOQPlbG7KuuDrymIrpcLujmQUd6pm1GvmXMVCZpbUiotH1tUsNVRpd0ci\noLyNUkHreVBHBXXcWRZ8XVtstV2H7zCmYqiQ1hn6CpFlNfnOHPfnsiKlklVy6cg6poZ6YmCn3Dp7\nySRttAK4UzUV1+u48yy2lsm1OnzHMBVDuSVt2ErCnaoBsJ0y6jYml1JDDuGMnXJLMxN3pRyUDHAt\nZeRSasgxnLFTbt1m4gMi3KkaKldSRmU0XgsIZ+zUJku5YtIuXQB44+qV+Nsbf58BncpjovFawFjH\nTmd0LoYCUSql16x7araJO//zWbz0avv5rf1+jsgI1rEnYiqmJFUc1mFanr7u2zeN4OxVyz/48UAO\nqoQrqSHHMBVTAl+PlMvbvZIHchC5hTP2Evh6pFyvlsVl/BwRlYOBvQS+zmDz9nUvqx88EeUTZCrG\ndiMqX4+Uy9u9kl0vidwSXFVMnsqOEMdAfdSsmoLCkLYqJrgZu+lzSfMoOoO1/YkjeDwwggIXXGB3\nJb+d90QjXytqvMGugFQDwQV2X/PbMRc+cQSNXQGpBgpVxYjIHhF5XkS+LyJfF5FhUwPLy/cKDVc+\ncQSNXQEpcEXLHR8DcKmqXg7gRwCsJyi3bxrB7psvw8jwkJeNqFgTXoFuXQFr3jiKwlEoFaOq3265\n+SSA9xUbjhl589suSGqs5dMnDue5dmAEUQlM5tg/DODfu31TRHYA2AEAo6OjBh82LKwJLxm7AlIN\n9K1jF5HHAaxN+NbtqvqNxfvcDqAB4GZNURjP7o5kHevY8+NrZ42xOnZVvabPA30IwA0Ark4T1H3C\nevKAsStgPtwD4IWiVTHbAHwawI2q+qqZIbkhridvzi9AsVRP7kP7XaJStO4BiBeb4/WJ117m4rND\niubY7wJwFoDHJJrxPKmqtxQelQNYT07UgXsAvFG0KuZ3TQ3EtKJpFJ/qyZkyosrEwT0O6gCDuoOC\nbNtrIo3iSz05U0ZUKe4B8EKQgd3EQRe+7GD19VAP8lDnHoA75qP/t+bcyQnB9YoBzKRRfKkn9yll\nRJ7jHgBvBBnYTTUC82EHq+9Nz8gzWyba69bj4M6g7pQgUzG+pFGmZpsYm5zGBeOPYGxyOlde3Jfn\nSgHhHgDnBTlj9yGNYqrvug/PlYiqFdzReKbkKSHM8jNjk9OJKZSR4SF8Z/wqI8+BiMIS3NF4VdZq\n55lNZ/0ZLnoSUVm8yLFXXaudp4Qw68/4UidPRP7xIrBXXaudZzad9We46ElEZfEiFVNm2iIpxZOn\nhDDrz2zfNIKZn/waXz34Ik6pYkAE732H++WVROQ+L2bs3YLjCpFC6ZhuKZ4tF6/JPJvuNwPvLG38\nm6nDePBQE6cWF69PqeLBQ022AqD8OgshuBO0trwI7ElBE4iCYZFce7cUz1cPvoj3vmMk07mpvc5a\nTXoDue/Jn7IVAJlzYHf7tv54+/+B3b1/joLkRSomDqi33f/MmRlurEgr3W6pnHj2nPUQ7G47VZPe\nQLrNpVgVQ5m19kkH2s9x3byTJxzVkBczdiAKmqe7fLTMGwx75cxNzp6zjI9VMZRZvK0/bsh153D7\nYd0M6rXjTWAHzJcIdkvxxEzNnruNr/OfG6tiKLfWhlwxBvXa8iqwmy4RjPPiA11++U3NnruN+6+u\nHM2UxzfRW4YCxT7p1MKLHHusjL4ocdnhV5786bLvbbl4Te7rdj4GUGzcJnrL8KSlQHX2SW/NsQOc\nudeQV4EdKKeV7oHn5zJ9PY+i4y56BquppmPkIPZJpw7eBfYy+NC3pegYeTh34NgnnVowsMOPwyqK\njtGlNy+mhErCPum0yMjiqYh8UkRURM4zcb2q+dC3pegYXWk6FuTh29zxSY4pHNhF5HwA7wGwfPXR\nE627RgFgQORMmsKVgNNrZ2saSW8MgysErx4/WWmVTXCHb3PHJznIRCrmnwB8CsA3DFzLmjhAurzA\nWGQBtrMy501Dg/jt8ZN46dUTAKp7ri6lhArjjk9yVKHALiI3Amiq6jMSwC9w6AuMrW8MY5PTmF84\n0fb9Kp6rD+sZqbVWnxy8eynAc8cnWdY3FSMij4vIDxL+uwnA7QA+k+aBRGSHiMyIyMzcnLkyQpOC\nmk32Yeu5+rCekQl3fJKD+gZ2Vb1GVS/t/A/AjwFcAOAZEfk/AOsBfE9E1na5zl5VbahqY80aMxt/\nTHNlgbEKtp5r0bUC53DHJzkodypGVQ8DeEt8ezG4N1T1VwbGZcWurRvbcuyA57PJHmw+1zI2mVnB\nHZ/kKNaxtyijZUGVstSH+/5cncAdn+QoUQsfGRuNhs7MzFT+uCHrbBkARDNwr9McvuisfmE1DJVE\nRA6paqPf/Thjr1CZOy5Dr+hxGnd8kmMY2CtSdhOuOlX0EFFvXvVj91nZOy7rVNFDRL0xsFek7Bl1\ncPXhRJQbA3tFyp5RB1cfTkS5McdekSrqxoOpDyeiQhjYK8K6cSKqCgN7hTijJqIqMMdORBQYBnYi\nosAwsBMRBYaBnYgoMFw8dVCZPWWIKHwM7I4pu6cMEYWPqRjHlN1ThojCx8DuGHZpJKKimIpxzLrh\nITQTgngduzRyrYEoH87YHcMujZF4raE5vwDF0lrD1GzT9tCInMfA7hh2aYxwrYEoP6ZiHMSeMlxr\nICqCgT1gPueoudZAlB9TMYHyPUfNtQai/AoHdhH5uIgcEZFnReQfTQyKivM9R821BqL8CqViRGQL\ngJsAXK6qr4vIW8wMi4oKIUfNtQaifIrO2HcCmFTV1wFAVX9ZfEhkQtlnrBKRu4ounl4E4E9E5O8B\nvAbgk6r6VPFhUS+ti6LDZw9CFXh54UTbAmkVZ6wSkZv6BnYReRzA2oRv3b74828GcCWAPwJwv4hc\nqKqacJ0dAHYAwOjoaJEx11pnk7CXXj1x5ntJDcN8rYohovwkIQan/2GRfYhSMU8s3v4fAFeq6lyv\nn2s0GjozM5P7cetsbHI6sQyw1cjwEL4zflVFIyKiqojIIVVt9Ltf0Rz7FICrFh/wIgCrAPyq4DWp\nhzSLnz4tkBKReUUD+5cAXCgiPwDwNQAfSkrDkDlpFj+5QEpUb4UCu6oeV9UPqOqlqvp2VZ02NTBK\nlrRxpxUXSImILQU807ko2q0qhojqi4HdQ9y4Q0S9sFcMEVFgGNiJiALDVIxBPrfJJaJwMLAb0rkj\nNGkXKBFRFZiKMcT3NrlEFA4GdkNCaJNLRGFgYDeEbXKJyBUM7IbwKDcicgUXTw1hm1wicgUDu0Hc\nEUpELmAqhogoMAzsRESBYWAnIgoMAzsRUWAY2ImIAlPoMOvcDyoyB+AnlT+wXeeB58H2w9coHb5O\n/YX6Gr1VVdf0u5OVwF5HIjKT5nTxOuNrlA5fp/7q/hoxFUNEFBgGdiKiwDCwV2ev7QF4gK9ROnyd\n+qv1a8QcOxFRYDhjJyIKDAN7hURkj4g8LyLfF5Gvi8iw7TG5QkS2icgREXlBRMZtj8c1InK+iBwQ\nkedE5FkR+YTtMblKRAZEZFZEHrY9FlsY2Kv1GIBLVfVyAD8CMGF5PE4QkQEAXwRwLYBLAPyFiFxi\nd1TOOQngNlV9G4ArAXyUr1FXnwDwnO1B2MTAXiFV/baqnly8+SSA9TbH45ArALygqj9W1eMAvgbg\nJstjcoqq/kxVv7f4598gClzsEd1BRNYDuB7AvbbHYhMDuz0fBvAt24NwxAiAF1tuHwWDVlcisgHA\nJgAH7Y7ESZ8H8CkAp20PxCYetGGYiDwOYG3Ct25X1W8s3ud2RB+t76tybA6ThK+xXCuBiJwD4EEA\nt6rqK7bH4xIRuQHAL1X1kIi82/Z4bGJgN0xVr+n1fRH5EIAbAFytrDWNHQVwfsvt9QCOWRqLs0Rk\nEFFQv09VH7I9HgeNAbhRRK4DsBrAuSLyFVX9gOVxVY517BUSkW0APgfgXao6Z3s8rhCRlYgWk68G\n0ATwFIC/VNVnrQ7MISIiAP4VwK9V9Vbb43Hd4oz9k6p6g+2x2MAce7XuAvBGAI+JyNMico/tAblg\ncUH5YwD2I1oUvJ9BfZkxAB8EcNXi787TizNTomU4YyciCgxn7EREgWFgJyIKDAM7EVFgGNiJiALD\nwE5EFBgGdiKiwDCwExEFhoGdiCgw/w99s/KviNhDhgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a146bd198>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# the_set = # TODO\n",
    "plot2DSet(the_set)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[array([ 1.03952877,  0.87535275])]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[generer_exemple() for _ in range(1)]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Étape 2: les classifieurs\n",
    "\n",
    "Un classifieur (binaire) permet, pour chaque point d'entrée, de calculer un score. Si le score est négatif, la donnée est associée à la classe $-1$, sinon à la classe $+1$. Commençons par définir une classe permettant par la suite de définir plusieurs classifieurs.\n",
    "\n",
    "Pour l'instant les méthodes `train` et `predict` ne seront pas définies car elles dépendent du modèle.\n",
    "\n",
    "La fonction `computeAccuracy` renvoie le pourcentage de points bien classés. Elle peut être définie dès maintenant.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "class Classifier:\n",
    "    def __init__(self, input_dimension):\n",
    "        raise NotImplementedError(\"Please Implement this method\")\n",
    "    \n",
    "    \n",
    "    #Permet de calculer la prediction sur x => renvoie un score\n",
    "    def predict(self, x):\n",
    "        raise NotImplementedError(\"Please Implement this method\")\n",
    "\n",
    "    \n",
    "    #Permet d'entrainer le modele sur un ensemble de données\n",
    "    def train(self, labeledSet):\n",
    "        raise NotImplementedError(\"Please Implement this method\")\n",
    "    \n",
    "    #Permet de calculer la qualité du système \n",
    "    def accuracy(self, dataset):\n",
    "        total = dataset.size()\n",
    "        nb_class = 0.0\n",
    "        for i in range(total):\n",
    "            if(self.predict(dataset.getX(i)) == dataset.getY(i)):\n",
    "                nb_class += 1.0\n",
    "        return nb_class / total"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Nous allons maintenant définir un classifieur linéaire aléatoire :\n",
    "- la fonction `predict` renvoie la valeur de $\\langle x | w\\rangle$ où $w$ est un vecteur (de taille `input_dimension`) tiré aléatoirement à la construction du classifieur."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "collapsed": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "class ClassifierRandom(Classifier):\n",
    "    def __init__(self, input_dimension):\n",
    "        self.input_dimension = input_dimension\n",
    "        self.vecteur_w = [generer_exemple() for _ in range(self.input_dimension)]\n",
    "    \n",
    "    def predict(self,x):\n",
    "        res = sum(np.dot(self.vecteur_w,x))\n",
    "        if res > 0:\n",
    "            return 1\n",
    "        else: \n",
    "            return -1\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Nous allons calculer la performance (*accuracy*) du classifieur random sur un ensemble de 100 points"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.44\n"
     ]
    }
   ],
   "source": [
    "the_set = LabeledSet(2)\n",
    "#on a un modele et on l'analyse par un autre exemple\n",
    "ajouter_exemples_aleatoires(the_set, 100, 0, [-1, 1])\n",
    "\n",
    "c = ClassifierRandom(2)\n",
    "print(c.accuracy(the_set))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Voici une fonction qui permet de dessiner la frontière de decision d'un classifieur. La valeur `step` permet de choisir la précision du dessin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def plot_frontiere(set, classifier, step=20):\n",
    "    mmax = set.x.max(0)\n",
    "    mmin = set.x.min(0)\n",
    "    x1grid, x2grid = np.meshgrid(np.linspace(mmin[0], mmax[0], step), np.linspace(mmin[1], mmax[1], step))\n",
    "    grid = np.hstack((x1grid.reshape(x1grid.size, 1), x2grid.reshape(x2grid.size, 1)))\n",
    "    \n",
    "    # calcul de la prediction pour chaque point de la grille\n",
    "    res = np.array([classifier.predict(grid[i,:]) for i in range(len(grid)) ])\n",
    "    res = res.reshape(x1grid.shape)\n",
    "    # tracé des frontieres\n",
    "    plt.contourf(x1grid, x2grid, res, colors=[\"red\", \"cyan\"], levels=[-1000,0,1000], linewidth=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nevcsrwWRAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a146ca2e8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "classifieur_random=ClassifierRandom(2)\n",
    "\n",
    "#on initialise notre dataset et ajoute de nouveaux exemples\n",
    "the_set = LabeledSet(2)\n",
    "ajouter_exemples_aleatoires(the_set, 50, -2, [-1])\n",
    "ajouter_exemples_aleatoires(the_set, 50, 2, [1])\n",
    "\n",
    "plot_frontiere(the_set,classifieur_random)\n",
    "plot2DSet(the_set)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Étape 3 : k-NN\n",
    "\n",
    "L'objectif est de définir le classifieur k-NN. Pour cela nous allons construire un tableau de distances que nous trierons grâce à la méthode `numpy.argsort`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#Une fonction calculant la distance entre les deux vecteurs\n",
    "def dist_vecteur(vect1, vect2):\n",
    "    return np.sqrt(np.square(vect1[0]-vect2[0])+np.square(vect1[1]-vect2[1]))\n",
    "\n",
    "class KNN(Classifier):\n",
    "    def __init__(self, input_dimension, k):\n",
    "        self.input_dimension = input_dimension\n",
    "        self.k = k\n",
    "        \n",
    "    def predict(self,x):\n",
    "        res = []\n",
    "        label = 0\n",
    "        for val in self.trainning_set.x :\n",
    "            res.append(dist_vecteur(val,x))\n",
    "        res = np.array(res)\n",
    "        res = np.argsort(res) # on trie le tableau de distances de l'ordre croissant et on cherche leur labels correspondantes\n",
    "        for i in range(self.k):\n",
    "            indice_label = res[i]\n",
    "            label += self.trainning_set.getY(indice_label)\n",
    "        if label > 0 :\n",
    "            return 1\n",
    "        else : \n",
    "            return -1\n",
    "    def train(self,dataset):\n",
    "        self.trainning_set = dataset #on sauvegarde notre \"set of examples\"\n",
    "   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.96\n"
     ]
    },
    {
     "data": {
      "image/png": "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\nQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x111eaaeb8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#dataset de l'apprentissage\n",
    "set_apprentissage = LabeledSet(2)\n",
    "ajouter_exemples_aleatoires(set_apprentissage, 100, -1, [-1])\n",
    "ajouter_exemples_aleatoires(set_apprentissage, 100, 1, [1])\n",
    "\n",
    "#dataset de test\n",
    "set_test = LabeledSet(2)\n",
    "ajouter_exemples_aleatoires(set_test, 100, -2, [-1])\n",
    "ajouter_exemples_aleatoires(set_test, 100, 2, [1])\n",
    "\n",
    "knn1 = KNN(2,5)\n",
    "knn1.train(set_apprentissage)\n",
    "plot_frontiere(set_test,knn1,20)\n",
    "print(knn1.accuracy(set_test))\n",
    "plot2DSet(set_test) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Étape 4: protocole expérimental\n",
    "\n",
    "Attention, lorsque vous testez un classifieur, il est nécessaire de considérer à la fois un ensemble d'apprentissage et un ensemble de test. La performance doit être évaluée sur l'ensemble de test (et non pas sur l'ensemble d'apprentissage)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.96\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a1464bba8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "knn2 = KNN(2,20)\n",
    "knn2.train(set_apprentissage)\n",
    "plot_frontiere(set_test,knn2,20)\n",
    "print(knn2.accuracy(set_test))\n",
    "plot2DSet(set_test) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.94\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x112185cc0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "knn3 = KNN(2,50)\n",
    "knn3.train(set_apprentissage)\n",
    "plot_frontiere(set_test,knn3,20)\n",
    "print(knn3.accuracy(set_test))\n",
    "plot2DSet(set_test) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.95\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a14e60be0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "knn4 = KNN(2,100)\n",
    "knn4.train(set_apprentissage)\n",
    "plot_frontiere(set_test,knn4,20)\n",
    "print(knn4.accuracy(set_test))\n",
    "plot2DSet(set_test) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Travail libre\n",
    "\n",
    "Comparer la performance (en train et test) de plusieurs classifieurs KNN avec différentes valeurs de k. Que pouvez vous constater ?\n",
    "Idéalement, vous tracerez la performance (accuracy) en fonction de la valeur de k.\n",
    "Essayez avec différentes configurations de gaussiennes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a14ba7400>"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a14c8a630>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ks =[]\n",
    "res = []\n",
    "for k in range(200):\n",
    "    knn = KNN(2,k)\n",
    "    knn.train(set_apprentissage)\n",
    "    res.append(knn.accuracy(set_test))\n",
    "dict_res = {\n",
    "    'Performance' : res\n",
    "}\n",
    "df = pd.DataFrame(dict_res)\n",
    "df.plot(kind='line')\n",
    "#Conclusion: au fur et mesure de l'augumentation de K, la performance correspondante diminue"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Étape 5 : données réelles UCI\n",
    "\n",
    "Plusieurs datasets sont téléchargeables depuis: http://mldata.org\n",
    "\n",
    "Voici la fonction permettant de les charger (en spécifiant leur nom). La fonction se charge de charger les données depuis le web."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(683, 10)\n",
      "[[-0.860107 -0.111111 -1.       ..., -0.555556 -1.       -1.      ]\n",
      " [-0.859671 -0.111111 -0.333333 ..., -0.555556 -0.777778 -1.      ]\n",
      " [-0.857807 -0.555556 -1.       ..., -0.555556 -1.       -1.      ]\n",
      " ..., \n",
      " [-0.876716 -0.111111  1.       ...,  0.555556  1.       -0.777778]\n",
      " [-0.875424 -0.333333  0.555556 ...,  1.        0.111111 -1.      ]\n",
      " [-0.875424 -0.333333  0.555556 ...,  1.       -0.333333 -1.      ]]\n",
      "[ 1  1  1  1  1 -1  1  1  1  1  1  1 -1  1 -1 -1  1  1 -1  1 -1 -1  1  1 -1\n",
      "  1  1  1  1  1  1 -1  1  1  1 -1  1 -1 -1 -1 -1 -1 -1  1 -1  1  1 -1 -1 -1\n",
      " -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1  1 -1  1 -1 -1  1  1 -1  1 -1 -1  1  1\n",
      "  1  1  1  1  1  1  1 -1 -1 -1 -1  1  1  1  1  1  1  1  1  1  1 -1 -1 -1 -1\n",
      "  1 -1 -1 -1 -1 -1  1 -1  1 -1 -1 -1  1  1  1 -1  1  1  1  1 -1 -1 -1  1 -1\n",
      "  1 -1  1  1  1 -1  1  1  1  1  1  1  1  1 -1  1  1 -1  1  1 -1  1 -1 -1  1\n",
      "  1 -1  1  1 -1 -1  1  1  1  1 -1 -1  1  1  1  1  1 -1 -1 -1  1 -1  1 -1  1\n",
      "  1  1 -1 -1  1 -1 -1 -1  1 -1 -1  1  1  1  1  1  1  1  1 -1 -1  1  1  1 -1\n",
      " -1  1  1  1 -1 -1  1 -1 -1 -1  1  1 -1  1  1 -1 -1 -1 -1  1 -1 -1  1 -1 -1\n",
      " -1  1 -1  1 -1 -1 -1 -1  1  1  1  1  1  1 -1 -1  1  1 -1  1 -1 -1 -1  1  1\n",
      "  1  1 -1 -1 -1 -1 -1  1 -1 -1 -1  1 -1  1 -1 -1  1  1  1  1 -1  1  1 -1 -1\n",
      " -1 -1 -1  1 -1 -1  1  1 -1 -1  1  1 -1 -1  1 -1  1 -1 -1  1  1 -1  1  1  1\n",
      " -1  1  1 -1 -1  1  1 -1  1 -1  1  1 -1  1 -1 -1 -1  1  1 -1 -1  1 -1  1  1\n",
      " -1 -1  1  1  1 -1  1  1  1 -1 -1  1  1  1 -1  1  1 -1 -1 -1 -1 -1 -1  1  1\n",
      "  1  1 -1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1 -1  1  1\n",
      "  1  1 -1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1 -1  1 -1\n",
      "  1 -1  1  1  1  1 -1  1  1  1 -1  1 -1  1  1  1  1  1  1  1 -1 -1  1  1  1\n",
      " -1  1  1  1  1  1  1  1  1 -1  1  1  1 -1  1 -1 -1 -1  1  1  1  1  1  1  1\n",
      " -1 -1 -1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1 -1 -1  1  1  1 -1 -1 -1\n",
      "  1 -1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1 -1\n",
      " -1  1  1  1 -1  1  1 -1 -1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1\n",
      "  1  1  1  1  1  1 -1  1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n",
      " -1  1  1 -1 -1 -1 -1  1  1 -1  1  1  1  1  1  1 -1 -1  1  1  1 -1  1 -1  1\n",
      " -1 -1 -1  1 -1  1  1  1  1  1  1  1  1 -1 -1 -1  1  1 -1  1 -1 -1 -1  1  1\n",
      "  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1 -1  1  1 -1  1  1  1  1\n",
      "  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1\n",
      "  1  1 -1 -1 -1  1  1  1  1  1  1  1  1  1 -1 -1  1  1  1  1  1  1  1  1  1\n",
      " -1  1  1  1  1 -1 -1 -1]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.datasets import fetch_mldata\n",
    "\n",
    "def loadFile(name):\n",
    "    data = fetch_mldata(name, data_home = '/Users/Lingshu/Desktop/3I026/TME2/')\n",
    "    print(data.data.shape)\n",
    "    unique = np.unique(data.target)\n",
    "    for i in range(len(data.target)):\n",
    "        if (data.target[i]==unique[0]):\n",
    "            data.target[i]=1\n",
    "        else:\n",
    "            data.target[i]=-1\n",
    "    return data.data, data.target\n",
    "datas,targets = loadFile('breast-cancer_scale')\n",
    "print(datas)\n",
    "print(targets) #les labels\n",
    "#Les donnees sont dans data.data et data.target"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Écrire la fonction de split permettant de découper les données en un ensemble d'apprentissage et un ensemble de test."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def split(data):\n",
    "    data_apprentissage = data[:int(len(data)/2)]\n",
    "    data_test = data[int(len(data)/2):]\n",
    "    return data_apprentissage, data_test\n",
    "data_apprentissage, data_test = split(datas)\n",
    "labels_apprentissage, labels_test = split(targets)\n",
    "#on verifie si on reussit a separer les datas et les targets \n",
    "#print(len(data_apprentissage))\n",
    "#print(len(data_test))\n",
    "#print(len(datas))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Tester différents k-NN , pour différents k, et tracer la courbe de performance (accuracy) pour les données d'apprentissage et les données de test."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.645\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a1461d400>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def turn_to_LabeledSet(tab1,tab2):\n",
    "    set_appretissage = LabeledSet(len(tab1))\n",
    "    for i in range(len(tab1)):\n",
    "        set_appretissage.addExample(tab1[i], tab2[i])\n",
    "    return set_apprentissage\n",
    "                   \n",
    "set_apprentissage_real = turn_to_LabeledSet(data_apprentissage,labels_apprentissage)\n",
    "set_test_real = turn_to_LabeledSet(data_test,labels_test)\n",
    "                   \n",
    "knn_real = KNN(set_apprentissage_real.getInputDimension,5)\n",
    "knn_real.train(set_apprentissage_real)\n",
    "plot_frontiere(set_test_real,knn_real,20)\n",
    "print(knn.accuracy(set_test_real))\n",
    "plot2DSet(set_test_real) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a14bc8518>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a14cad048>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ks =[]\n",
    "res = []\n",
    "for k in range(200):\n",
    "    knn_real = KNN(set_apprentissage_real.getInputDimension,k)\n",
    "    knn_real.train(set_apprentissage_real)\n",
    "    res.append(knn_real.accuracy(set_test_real))\n",
    "dict_res = {\n",
    "    'Performance' : res\n",
    "}\n",
    "df = pd.DataFrame(dict_res)\n",
    "df.plot(kind='line')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
